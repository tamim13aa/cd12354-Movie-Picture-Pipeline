name: Backend CD

on:
  push:
    branches: [ main ]
    paths:
      - 'starter/backend/**'
      - '.github/workflows/backend-cd.yml'
  workflow_dispatch:

concurrency:
  group: backend-cd
  cancel-in-progress: true

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.local/share/virtualenvs
          key: pip-${{ runner.os }}-${{ hashFiles('starter/backend/Pipfile.lock') }}
          restore-keys: |
            pip-${{ runner.os }}-
      - run: pip install pipenv
      - run: pipenv install --dev
      - run: pipenv run lint
      - run: pipenv run test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ vars.AWS_REGION }}

      - uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push image
        working-directory: starter/backend
        run: |
          docker build -t ${{ vars.BACKEND_ECR }}:${{ env.IMAGE_TAG }} .
          docker push ${{ vars.BACKEND_ECR }}:${{ env.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ vars.AWS_REGION }}

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ${{ vars.AWS_REGION }} --name ${{ vars.CLUSTER_NAME }}

      - uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: '5.4.1'

      - name: Set image and apply
        working-directory: starter/backend/k8s
        run: |
          kustomize edit set image backend=${{ vars.BACKEND_ECR }}:${{ env.IMAGE_TAG }}
          kustomize build | kubectl apply -f -
          kubectl rollout status deployment/backend
